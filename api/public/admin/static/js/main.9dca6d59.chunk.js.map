{"version":3,"sources":["helpers/dataProvider.js","helpers/s3.js","helpers/ra-data-rest-hapi-fixed.js","helpers/authProvider.js","components/App.js","serviceWorker.js","index.js"],"names":["requestHandler","s3Upload","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","file","fileParts","fileName","fileType","response","returnData","signedRequest","url","options","uploadResponse","wrap","_context","prev","next","title","split","console","log","axios","post","sent","abrupt","data","headers","Content-Type","onUploadProgress","progressEvent","loaded","put","rawFile","stop","_x","apply","this","arguments","s3Delete","filename","token","localStorage","getItem","authorization","concat","dataProvider","apiUrl","httpClient","length","undefined","fetchUtils","fetchJson","getQueryForParams","params","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","filter","$sort","q","$term","assign","flattenObject","$limit","$page","cleanData","clean","id","createdAt","updatedAt","deletedAt","isDeleted","JSON","stringify","type","resource","UPDATE_MANY","Promise","all","ids","map","method","body","then","responses","json","DELETE_MANY","_convertDataRequestTo","GET_LIST","query","GET_ONE","GET_MANY_REFERENCE","target","UPDATE","CREATE","DELETE","GET_MANY","_id","join","Error","convertDataRequestToHTTP","docs","d","total","items","convertHTTPResponse","restHapiProvider","Headers","Accept","set","i","files","path","_x2","_x3","window","location","protocol","hostname","port","authProvider","AUTH_LOGIN","username","password","request","Request","fetch","status","statusText","setItem","AUTH_LOGOUT","removeItem","resolve","AUTH_ERROR","reject","AUTH_CHECK","ConfigForm","react_default","createElement","SimpleForm","TextInput","source","SelectInput","choices","name","ConfigEdit","props","Edit","ConfigCreate","Create","NodeForm","multiline","NodeEdit","NodeCreate","NodeList","List","Datagrid","rowClick","TextField","PlayerForm","PlayerEdit","PlayerCreate","VarForm","ReferenceInput","label","reference","allowEmpty","optionText","VarEdit","VarCreate","FileToolbar","Toolbar","DeleteButton","undoable","record","FileEdit","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","baseURL","baseUrl","result","value","setState","toolbar","App_FileToolbar","href","Component","FileCreate","FileInput","multiple","FileField","MessageForm","MessageEdit","MessageCreate","MessageList","DateField","App","Admin","Resource","list","ListGuesser","edit","create","EditGuesser","Boolean","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dca6d59.chunk.js","sourcesContent":["import { fetchUtils } from 'react-admin';\nimport { s3Upload, s3Delete } from \"./s3.js\";\n\nimport restHapiProvider from './ra-data-rest-hapi-fixed.js';\n\nconst apiUrl = \"/api\";\n\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    const token = localStorage.getItem('token');\n    options.headers.set('authorization', `${token}`);\n    return fetchUtils.fetchJson(url, options);\n}\n\nconst extendDataProvider = requestHandler => async (type, resource, params) => {\n\n    console.log(type, resource, params);\n\n    if (type === 'CREATE' && resource === 'file') {\n\n      let response = null\n      for(let i = 0; i < params.data.files.length; i++) {\n\n        let url = await s3Upload(params.data.files[i]);\n        if(url) {\n          response = await requestHandler(type, resource, {data: {\n            filename: params.data.files[i].title, \n            path: params.data.files[i].title\n          }});   \n          console.log(response)\n        } else {\n          throw new Error(\"upload error\");\n        } \n      }\n      return response;\n    }\n\n    if (type === 'DELETE' && resource === 'file') {\n        let file = await requestHandler('GET_ONE', 'file', { id: params.id });\n        if(file && file.data) {\n          s3Delete(file.data);\n        }\n        console.log(\"now dispatching normal delete request to api\");\n    }\n\n    // for other request types and resources, fall back to the default request handler\n    return requestHandler(type, resource, params);\n};\n\nconst dataProvider = extendDataProvider(restHapiProvider(apiUrl, httpClient));\n\nexport { dataProvider }\n\n\n\n","import axios from 'axios';\n\nconst s3Upload = async (file) => {\n    // Split the filename to get the name and type\n    let fileParts = file.title.split('.');\n    let fileName = file.title;\n    let fileType = fileParts[1];\n    console.log(\"Preparing the upload\", fileName, fileType);\n    \n    let response = await axios.post(\"/api/s3_sign\", {\n      fileName : fileName,\n      fileType : fileType\n    });\n    if(!response) return null;\n\n    console.log(response);\n\n    var returnData = response.data.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n  \n    console.log(\"Recieved a signed request \" + signedRequest);\n    // Put the fileType in the headers for the upload\n    var options = {\n      headers: {\n        'Content-Type': fileType\n      },\n      onUploadProgress: progressEvent => {console.log(progressEvent.loaded);}\n    };\n  \n    let uploadResponse = await axios.put(signedRequest, file.rawFile, options)\n    console.log(\"Response from s3\", uploadResponse);\n\n    if(uploadResponse) {\n      return url;  \n    }\n}\n\nconst s3Delete = (data) => {\n  let fileName = data.filename;\n  const token = localStorage.getItem('token');\n  axios.post(\"/api/s3_delete\", {\n      fileName : fileName\n  }, {headers: {authorization: `${token}`}})\n}\n\nexport { s3Upload, s3Delete };","import { stringify } from 'query-string'\nimport {\n  fetchUtils,\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  UPDATE_MANY,\n  DELETE,\n  DELETE_MANY\n} from 'react-admin'\n\n/**\n * Maps admin-on-rest queries to a rest-hapi powered REST API\n *\n * @see https://github.com/JKHeadley/rest-hapi\n * @example\n * GET_LIST     => GET http://my.api.url/posts?$sort=title&$limit=24&$page=1\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts/123, GET http://my.api.url/posts/456, GET http://my.api.url/posts/789\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts/123\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n  const getQueryForParams = (params) => {\n    const { page, perPage } = params.pagination\n    const { field, order } = params.sort\n    if (field) {\n      params.filter.$sort = (order === 'DESC' ? '-' : '') + field\n      /* A set of fields to sort by.\n      Including field name indicates it should be sorted ascending, while prepending '-' indicates descending.\n      The default sort direction is 'ascending' (lowest value to highest value).\n      Listing multiplefields prioritizes the sort starting with the first field listed */\n    }\n    if (params.filter.q != null) {\n      params.filter.$term = params.filter.q\n      delete params.filter.q\n    }\n    return Object.assign(\n      fetchUtils.flattenObject(params.filter), // add filter as is, e.g. name=john\n      {$limit: perPage, $page: page}, // pagination\n      /* Rest-Hapi docs:\n      A set of fields to sort by.\n      Including field name indicates it should be sorted ascending, while prepending '-' indicates descending.\n      The default sort direction is 'ascending' (lowest value to highest value).\n      Listing multiplefields prioritizes the sort starting with the first field listed */\n      field ? {$sort: (order === 'DESC' ? '-' : '') + (field === 'id' ? '_id' : field)} : {} // optional field sort\n    )\n  }\n\n  const cleanData = (params) => {\n    const clean = Object.assign({}, params.data)\n    delete clean.id\n    delete clean.createdAt\n    delete clean.updatedAt\n    delete clean.deletedAt\n    delete clean.isDeleted\n    return JSON.stringify(clean)\n  }\n\n  /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n  const convertDataRequestToHTTP = (type, resource, params) => {\n    let url = ''\n    const options = {}\n    switch (type) {\n      case GET_LIST: {\n        const query = getQueryForParams(params)\n        url = `${apiUrl}/${resource}?${stringify(query)}`\n        break\n      }\n      case GET_ONE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        break\n      case GET_MANY_REFERENCE: {\n        const query = getQueryForParams(params)\n        query[params.target] = params.id\n        url = `${apiUrl}/${resource}?${stringify(query)}`\n        break\n      }\n      case UPDATE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        options.method = 'PUT'\n        options.body = cleanData(params)\n        break\n      case CREATE:\n        url = `${apiUrl}/${resource}`\n        options.method = 'POST'\n        options.body = cleanData(params)\n        break\n      case DELETE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        options.method = 'DELETE'\n        break\n      case GET_MANY: {\n        url = `${apiUrl}/${resource}?${params.ids.map(_id => stringify({_id})).join('&')}`\n        break\n      }\n      default:\n        throw new Error(`Unsupported fetch action type ${type}`)\n    }\n    return { url, options }\n  }\n\n  /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n  const convertHTTPResponse = (response, type, resource, params) => {\n    console.log(type, resource, params);\n    const { json } = response\n    switch (type) {\n      case GET_LIST:\n      case GET_MANY:\n      case GET_MANY_REFERENCE:\n        return {\n          data: json.docs.map(d => (d.id = d._id) && delete d._id && d),\n          total: json.items.total\n        }\n      case CREATE:\n        params.data.id = params.data._id\n        delete params.data._id\n        return { data: params.data }\n      \n      /* modified seb */\n      case DELETE: \n        return { data: params }\n      default:\n        if(json) {\n          json.id = json._id\n          delete json._id\n          return { data: json }\n        } else {\n          return { data: {} }\n        }\n    }\n  }\n\n  /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n  return (type, resource, params) => {\n    // json-server doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n    if (type === UPDATE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }))\n    }\n    // json-server doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    if (type === DELETE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE'\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }))\n    }\n    const { url, options } = convertDataRequestToHTTP(\n      type,\n      resource,\n      params\n    )\n    return httpClient(url, options).then(response =>\n      convertHTTPResponse(response, type, resource, params)\n    )\n  }\n}\n","// in src/authProvider.js\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nconst apiUrl = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? \":\" + window.location.port : \"\") + \"/api\";\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        const request = new Request(apiUrl + '/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                localStorage.setItem('token', token);\n            });\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('token');\n        return Promise.resolve();\n    }\n    \n    if (type === AUTH_ERROR) {\n        const status  = params.status;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('token');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n\n    if (type === AUTH_CHECK) {\n      console.log(\"auth check\", localStorage.getItem('token'));\n      return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n\n\n    return Promise.reject('Unknown method');\n}","import React, { Component } from 'react';\nimport { \n  Admin, \n  DeleteButton, \n  Resource, \n  EditGuesser,\n  ListGuesser, \n  List, \n  Datagrid, \n  Edit, \n  Create, \n  SimpleForm, \n  TextInput, \n  TextField, \n  Toolbar, \n  FileInput, \n  FileField,\n  ReferenceInput,\n  SelectInput,\n  LongTextInput,\n  DateField,\n} from 'react-admin';\n\nimport { dataProvider } from '../helpers/dataProvider.js';\nimport authProvider from '../helpers/authProvider';\n\nconst ConfigForm = \n    <SimpleForm>\n        <TextInput source=\"key\" />\n        <SelectInput source=\"type\" choices={[\n          { id: 'text', name: 'Text' },\n          { id: 'number', name: 'Number' },\n        ]} />\n        <TextInput source=\"value\" />\n    </SimpleForm>\nconst ConfigEdit = props => <Edit {...props}>{ConfigForm}</Edit>;\nconst ConfigCreate = props => <Create {...props}>{ConfigForm}</Create>;\n\nconst NodeForm = \n    <SimpleForm>\n        <TextInput source=\"name\" />\n        <TextInput multiline source=\"script\" />\n    </SimpleForm>\nconst NodeEdit = props => <Edit {...props}>{NodeForm}</Edit>;\nconst NodeCreate = props => <Create {...props}>{NodeForm}</Create>;\nconst NodeList = props =>\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n        <TextField source=\"name\" />\n    </Datagrid>\n  </List>;\n\nconst PlayerForm = \n    <SimpleForm>\n    </SimpleForm>\nconst PlayerEdit = props => <Edit {...props}>{PlayerForm}</Edit>;\nconst PlayerCreate = props => <Create {...props}>{PlayerForm}</Create>;\n\nconst VarForm = \n    <SimpleForm>\n        <TextInput source=\"key\" />\n        <TextInput source=\"value\" />\n        <SelectInput source=\"varScope\" choices={[\n          { id: 'player', name: 'player' },\n          { id: 'playerNode', name: 'playerNode' },\n          { id: 'node', name: 'node' },\n          { id: 'board', name: 'board' },\n        ]} />\n\n        <ReferenceInput label=\"player\" source=\"player\" reference=\"player\" perPage={200} allowEmpty>\n          <SelectInput optionText=\"id\"/>\n        </ReferenceInput>\n\n        <ReferenceInput label=\"node\" source=\"script\" reference=\"scriptNode\" perPage={200} allowEmpty>\n          <SelectInput optionText=\"name\"/>\n        </ReferenceInput>\n\n        <ReferenceInput label=\"board\" source=\"board\" reference=\"board\" perPage={200} allowEmpty>\n          <SelectInput optionText=\"name\"/>\n        </ReferenceInput>\n        \n    </SimpleForm>\nconst VarEdit = props => <Edit {...props}>{VarForm}</Edit>;\nconst VarCreate = props => <Create {...props}>{VarForm}</Create>;\n\nconst FileList = props =>\n  <List {...props} bulkActionButtons={false}>\n    <Datagrid rowClick=\"edit\">\n        <TextField source=\"filename\" />\n    </Datagrid>\n  </List>;\n\nconst FileToolbar = props => \n  <Toolbar {...props}>\n    <DeleteButton undoable={false} record={props.data} />\n  </Toolbar>\n          \n\nclass FileEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      baseURL: \"\"\n    };\n    console.log(props);\n  }\n\n  async componentDidMount() {\n    let baseUrl = \"\"\n    let result = await fetch(\"/api/config?key=fileServerURL\");\n    let json = await result.json();\n    if(json.docs.length)\n      baseUrl = json.docs[0].value;\n\n    result = await fetch(\"/api/file/\" + this.props.id);\n    json = await result.json();\n    console.log(json);\n    if(json)\n      this.setState({url: baseUrl+json.filename});    \n  }\n\n  render() {\n    return(\n    <Edit {...this.props} >\n      <SimpleForm toolbar={<FileToolbar />}>\n        <TextField source=\"filename\" />\n        <a href={this.state.url}>link</a>\n      </SimpleForm>\n    </Edit>)\n  }\n}\n\nconst FileCreate = props => \n  <Create {...props}>\n    <SimpleForm>\n      <FileInput source=\"files\" multiple={true}>\n        <FileField source=\"filename\" title=\"title\" />\n      </FileInput>\n    </SimpleForm>\n  </Create>\n\nconst MessageForm = \n    <SimpleForm>\n        <TextInput source=\"message\" />\n        <TextInput source=\"label\" />\n        <TextInput source=\"attachment\" />\n        <TextInput source=\"sender\" />\n        <TextInput source=\"recipients\" />\n        <TextInput source=\"board\" />\n        <TextInput source=\"node\" />\n        <TextInput source=\"timestamp\" />\n        <TextInput source=\"seen\" />\n    </SimpleForm>\nconst MessageEdit = props => <Edit {...props}>{MessageForm}</Edit>;\nconst MessageCreate = props => <Create {...props}>{MessageForm}</Create>;\n\nexport const MessageList = props => (\n    <List {...props} perPage={100}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"recipients\" />\n            <TextField source=\"seen\" />\n            <TextField source=\"message\" />\n            <TextField source=\"sender\" />\n            <TextField source=\"label\" />\n            <TextField source=\"node\" />\n            <TextField source=\"board\" />\n            <DateField source=\"timestamp\" />\n            <DateField source=\"createdAt\" />\n            <TextField source=\"id\" />\n            <DateField source=\"updatedAt\" />\n        </Datagrid>\n    </List>\n);\n\n\nconst App = () => \n  <Admin dataProvider={dataProvider} authProvider={authProvider}>\n    <Resource name=\"config\" list={ListGuesser} edit={ConfigEdit} create={ConfigCreate}/>\n    <Resource name=\"board\" list={ListGuesser} edit={EditGuesser}/>\n    <Resource name=\"scriptNode\" list={NodeList} edit={NodeEdit} create={NodeCreate}/>\n    <Resource name=\"player\" list={ListGuesser} edit={PlayerEdit} create={PlayerCreate}/>\n    <Resource name=\"variable\" list={ListGuesser} edit={VarEdit} create={VarCreate}/>\n    <Resource name=\"file\" list={ListGuesser} edit={FileEdit} create={FileCreate}/>\n    <Resource name=\"message\" list={MessageList} edit={MessageEdit} create={MessageCreate}/>\n    <Resource name=\"nodeLog\" list={ListGuesser}/>\n  </Admin>\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
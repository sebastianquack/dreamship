version: '3.3'
services:
  app:
    image: interkit/interkit:latest
    environment:
      ADMIN_PASSWORD: dream
      AWSAccessKeyId: 2QnjrZa8xskGDkgRHa
      AWSEndpoint: http://minio:9002
      AWSSecretKey: svyY54BZL4curtbPX2
      Bucket: dreamshiplocal
      JWT_SECRET: ZMTmUvdjNmkb9i7yXx_CHANGE_ME_PLEASE
      MONGODB_URI: mongodb://mongo:27017
      NODE_ENV: development
      PORT: '9000'
    ports:
     - 9000:9000
    networks:
     - default
    logging:
      driver: json-file
  minio:
    image: minio/minio:latest
    command:
     - server
     - /data
    environment:
      MINIO_ACCESS_KEY: 2QnjrZa8xskGDkgRHa
      MINIO_SECRET_KEY: svyY54BZL4curtbPX2
    ports:
     - 9002:9000
    volumes:
     - minio:/data
    networks:
     - default
    logging:
      driver: json-file
  minio-mc-init:
    image: minio/mc:latest
    environment:
      MINIO_ACCESS_KEY: 2QnjrZa8xskGDkgRHa
      MINIO_SECRET_KEY: svyY54BZL4curtbPX2
    networks:
     - default
    secrets:
     - MINIO_SECRET_KEY
    entrypoint: >
      /bin/sh -c "
      sleep 15;
      /usr/bin/mc config host add minio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      /usr/bin/mc mb minio/dreamshiplocal;
      /usr/bin/mc policy set public minio/dreamshiplocal;
      exit;
      "     
    logging:
      driver: json-file
    deploy:
      restart_policy:
        condition: none
  mongo:
    image: mongo:4.2
    ports:
     - 27017:27017
    volumes:
     - mongo:/data/db
    networks:
     - default
    logging:
      driver: json-file
networks:
  default:
    driver: overlay
volumes:
  minio:
    external: true
  mongo:
    external: true
